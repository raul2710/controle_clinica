/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.PacienteDAO;
import java.awt.event.KeyEvent;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.Paciente;

/**
 *
 * @author Raul
 */
public class FormPesquisaPaciente extends javax.swing.JInternalFrame {

    /**
     * Creates new form FormPesquisaPaciente
     */
    public FormPesquisaPaciente() {
        initComponents();
        
        this.setTitle("Pesquisar Paciente");
        this.setResizable(false);
        this.setIconifiable(false);
        this.setMaximizable(false);
        this.setClosable(true);
        configurarTabela();
        
        List<Paciente> lista = new PacienteDAO().listarPorId();
        if (lista.size() > 0) {
        DefaultTableModel m = (DefaultTableModel) tabResultado.getModel();
            for (Paciente paciente : lista) {
                m.addRow(new Object[]{
                    paciente.getId(),
                    paciente.getNome(), 
                    paciente.getSexo(),
                    paciente.getData_nasc(), 
                    paciente.isFg_ativo(), 
                    paciente.getTelefone(),
                    paciente.getEmail(),
                    paciente.getCpf()
                });
            }
            tabResultado.setModel(m);
        } else {
            JOptionPane.showMessageDialog(
                null, "Nenhum registro encontrado."
            );
        }
    }

    private void configurarTabela() {
        DefaultTableModel m = new DefaultTableModel() {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };
        m.addColumn("Id");
        m.addColumn("Nome");
        m.addColumn("Sexo");
        m.addColumn("Data de Nascimento");
        m.addColumn("Fg_Ativo");
        m.addColumn("Telefone");
        m.addColumn("E-mail");
        m.addColumn("CPF");
        tabResultado.setModel(m);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtPesquisa = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tabResultado = new javax.swing.JTable();
        lblPesquisarPor = new javax.swing.JLabel();
        btnId = new javax.swing.JButton();
        lblListarPor = new javax.swing.JLabel();

        txtPesquisa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPesquisa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtPesquisaActionPerformed(evt);
            }
        });
        txtPesquisa.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPesquisaKeyReleased(evt);
            }
        });

        tabResultado.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tabResultado.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabResultadoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabResultado);

        lblPesquisarPor.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        lblPesquisarPor.setText("Pesquisar paciente por nome:");

        btnId.setText("Id");
        btnId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIdActionPerformed(evt);
            }
        });

        lblListarPor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblListarPor.setText("Listar por:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblPesquisarPor)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 830, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPesquisa)
                        .addGap(18, 18, 18)
                        .addComponent(lblListarPor)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnId)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lblPesquisarPor)
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPesquisa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnId)
                        .addComponent(lblListarPor)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtPesquisaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtPesquisaActionPerformed

    }//GEN-LAST:event_txtPesquisaActionPerformed

    private void txtPesquisaKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPesquisaKeyReleased
        
        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            if (txtPesquisa.getText().isEmpty()) {
                JOptionPane.showMessageDialog(
                    null, "Informe o crit√©rio de pesquisa."
                );
            } else {
                configurarTabela();
                List<Paciente> lista = new PacienteDAO()
                    .pesquisarPorNome(txtPesquisa.getText());
                if (lista.size() > 0) {
                    DefaultTableModel m = (DefaultTableModel) tabResultado.getModel();
                    for (Paciente paciente : lista) {
                        m.addRow(new Object[]{
                            paciente.getId(),
                            paciente.getNome(), 
                            paciente.getSexo(),
                            paciente.getData_nasc(), 
                            paciente.isFg_ativo(), 
                            paciente.getTelefone(),
                            paciente.getEmail(),
                            paciente.getCpf()
                        });
                    }
                        tabResultado.setModel(m);
                } else {
                    JOptionPane.showMessageDialog(
                        null, "Nenhum registro encontrado."
                    );
                }     
            }
        }
    }//GEN-LAST:event_txtPesquisaKeyReleased

    private void tabResultadoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabResultadoMouseClicked
        // TODO add your handling code here:
        //CLIQUE DUPLO
        if (evt.getClickCount() == 2) {

            //Descobrir a linha selecionada
            int linha = tabResultado.getSelectedRow();

            //Recuperar o ID selecionado
            int id = Integer.parseInt(
                    tabResultado.getValueAt(linha, 0).toString()
            );

            //Abrir o FormCadastro
            FormCadastroPaciente f
                    = new FormCadastroPaciente(id);
            this.getDesktopPane().add(f);
            f.setVisible(true);

            //Fechar o FormPesquisa
            this.dispose();
            
        }

    }                                         

    private void btnListarPorIdActionPerformed(java.awt.event.ActionEvent evt) {                                               
    }//GEN-LAST:event_tabResultadoMouseClicked

    private void btnIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIdActionPerformed
        // TODO add your handling code here:
        configurarTabela();
        List<Paciente> lista = new PacienteDAO().listarPorId();
        if (lista.size() > 0) {
        DefaultTableModel m = (DefaultTableModel) tabResultado.getModel();
            for (Paciente paciente : lista) {
                m.addRow(new Object[]{
                    paciente.getId(),
                    paciente.getNome(), 
                    paciente.getSexo(),
                    paciente.getData_nasc(), 
                    paciente.isFg_ativo(), 
                    paciente.getTelefone(),
                    paciente.getEmail(),
                    paciente.getCpf()
                });
            }
            tabResultado.setModel(m);
        } else {
            JOptionPane.showMessageDialog(
                null, "Nenhum registro encontrado."
            );
        }
    }//GEN-LAST:event_btnIdActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnId;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblListarPor;
    private javax.swing.JLabel lblPesquisarPor;
    private javax.swing.JTable tabResultado;
    private javax.swing.JTextField txtPesquisa;
    // End of variables declaration//GEN-END:variables
}
